@model MolDavaBanking.Domain.SupportMessageViewModel.SupportMessageViewModel

@{
    ViewBag.Title = "Contact Support Team";
}

<div class="alert alert-dismissible alert-success" id="success_message">
    <button type="button" class="close" onclick="SetSuccessMessageToHidden()">&times;</button>
    <strong>Success <i class="glyphicon glyphicon-thumbs-up"></i></strong> Thanks for contacting us, we will get back to you shortly.
</div>

<div class="alert alert-dismissible alert-danger" id="failure_message">
    <button type="button" class="close" onclick="SetErrorMessageToHidden()">&times;</button>
    <strong>Error <i class="glyphicon glyphicon-thumbs-down"></i></strong> Your message was not sent. Please change it and try again.
</div>

<div style="margin-top: 9%">
    @using (Html.BeginForm(Html.BeginForm("ContactSupport", "Support", FormMethod.Post, new { @name = "contactSupport" })))
    {
        @Html.AntiForgeryToken()
        <div class="well form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <legend>Contact Us Today!</legend>

            <div class="form-group">
                @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "col-md-4 control-label" })
                <div class="col-md-4 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-envelope"></i></span>
                        @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control", @placeholder = "Subject" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger", @id = "subjectValidationMessage" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Body, "Message", htmlAttributes: new { @class = "col-md-4 control-label" })
                <div class="col-md-4 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-pencil"></i></span>
                        @Html.TextAreaFor(model => model.Body, htmlAttributes: new { @class = "form-control", @placeholder = "Message", @rows = "5" })
                    </div>
                    @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Phone", htmlAttributes: new { @class = "col-md-4 control-label" })
                <div class="col-md-4 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-phone"></i></span>
                        @Html.Editor("Phone", new { htmlAttributes = new { @class = "form-control", @placeholder = "Phone number" } })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <label class="col-md-4 control-label"></label>
                <div class="col-md-4">
                    <a class="btn btn-danger" onclick="CancelSupportMessage()">Cancel <span class="glyphicon glyphicon-remove-sign"></span></a>
                    <a class="btn btn-warning" onclick="SendSupportMessage()">Send <span class="glyphicon glyphicon-send"></span></a>
                </div>
            </div>
        </div>
    }
</div>

@section Styles{
    <style>
        #success_message {
            display: none;
        }

        #failure_message {
            display: none;
        }
    </style>
}

@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        var validator;

        $(function () {
            validator = $("form[name='contactSupport']").validate({
                rules: {
                    Subject: {
                        required: true,
                        minlength: 10
                    },
                    Body: {
                        required: true,
                        minlength: 20
                    }
                },
                messages: {
                    Subject: {
                        required: "Please provide a subject",
                        minlength: "Your subject must be at least 10 characters long"
                    },
                    Body: {
                        required: "Please provide a message",
                        minlength: "Your message must be at least 20 characters long"
                    }
                }
            });
        });

        function SendSupportMessage() {
            var isValidated = validator.form();
            if (isValidated) {
                var messageSubject = $("#Subject").val();
                var messageBody = $("#Body").val();
                var message = { Subject: messageSubject, Body: messageBody }
                $.ajax({
                    method: "POST",
                    url: "/Support/ContactSupport",
                    data: JSON.stringify(message),
                    dataType: "JSON",
                    contentType: "application/json",
                    success: function (isAdded) {
                        if (isAdded == true) {
                            $("#success_message").css("display", "block");
                            //$("#success_message").show();
                            $("#Subject").val("");
                            $("#Body").val("");
                            $("#Phone").val("");
                        }
                        else {
                            //$("#failure_message").show();
                            $("#failure_message").css("display", "block");
                        }
                    },
                    error: function () {
                        $("#failure_message").css("display", "block");
                    }
                })
            }
            else {
                $("#failure_message").css("display", "block");
            }
        }

        function CancelSupportMessage() {
            $("#Subject").val("");
            $("#Body").val("");
            $("#Phone").val("");
            $("#Body-error").hide();
            $("#Subject-error").hide();
        }

        function SetErrorMessageToHidden() {
            $("#failure_message").css("display", "none");
        }

        function SetSuccessMessageToHidden() {
            $("#success_message").css("display", "none");
        }
    </script>
}