@model MolDavaBanking.Domain.UserViewModel.UserViewModel_Create

@{
    ViewBag.Title = "Create User";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>Create User</h4>
        <div id="returnedMessage" style="color:red"></div>
        <h5 style="color:red">@ViewBag.Msg</h5>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IDNP, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IDNP, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IDNP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Adress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Adress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Adress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.Password, new { @class = "form-control text-box single-line" })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsLocked, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div>
                    <label>@Html.RadioButtonFor(model => model.IsLocked, 1) Locked</label>
                </div>
                <div>
                    <label>@Html.RadioButtonFor(model => model.IsLocked, 0) Unlocked</label>
                </div>
                @Html.ValidationMessageFor(model => model.IsLocked, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Roles", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div>
                    <label>@Html.CheckBoxFor(model => model.IsAdmin) Admin</label>
                </div>
                <div>
                    <label>@Html.CheckBoxFor(model => model.IsAccountant) Accountant</label>
                </div>
                <div>
                    <label>@Html.CheckBoxFor(model => model.IsClient) Client</label>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create User" class="btn btn-default" @*onclick="CreateUser()"*@ />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@*<script type="text/javascript">
    function CreateUser() {
        debugger;
        var user = {};
        var roles = [];
        user.FirstName = $("#FirstName").val();
        user.LastName = $("#LastName").val();
        user.IDNP = $("#IDNP").val();
        user.BirthDate = $("#BirthDate").val();
        user.Adress = $("#Adress").val();
        user.Email = $("#Email").val();
        user.Password = $("#Password").val();

        if ($("#IsLocked").is(":checked")) {
            user.IsLocked = 1;
        }
        else {
            user.IsLocked = 0;
        }

        if ($("#Admin").is(":checked")) {
            roles.push("Admin");
        }
        if ($("#Accountant").is(":checked")) {
            roles.push("Accountant");
        }
        if ($("#Client").is(":checked")) {
            roles.push("Client");
        }
        user.Roles = roles;
        $.ajax({
            method: "POST",
            url: "/User/CreateUser",
            data: JSON.stringify(user),
            dataType: "JSON",
            contentType: "application/json",
            success: function () {
                window.location.href = "/User/GetUsers";                    
            },
            error: function () {
                alert("Error");
            }
        })
    }
</script>*@