@model MolDavaBanking.Domain.CardViewModel.CardViewModel_CreateCard
@using CardCurrencies = MolDavaBanking.Domain.CardViewModel.CardViewModel_CreateCard.CardCurrencies
@using CardTypes = MolDavaBanking.Domain.CardViewModel.CardViewModel_CreateCard.CardTypes

@{
    ViewBag.Title = "Create Card";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>Create Card</h4>
        <h5 style="color:@ViewBag.Color">@ViewBag.Msg</h5>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.CardNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CardNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CardNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BankName, "Bank", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.BankName, new SelectList(new List<string>()), "Select Bank", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BankName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Currency, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Currency, new SelectList(Enum.GetValues(typeof(CardCurrencies))), "Select Card Currency", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Currency, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExpirationDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExpirationDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExpirationDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CardType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CardType, new SelectList(Enum.GetValues(typeof(CardTypes))), "Select Card Type", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CardType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserIDNP, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserIDNP, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserIDNP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create Card" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $(document).ready(function () {
            GetBanks();
        })

        function GetBanks() {
            $.ajax({
                method: "POST",
                url: "/Bank/GetBanksName",
                success: function (banksNames) {
                    $.each(banksNames, function (i) {
                        $("<option>" + banksNames[i] + "</option>").appendTo("#BankName");
                    });
                },
                error: function () {

                }
            })
        }
    </script>
}